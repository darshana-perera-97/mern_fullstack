01. go to 'MongoDB atlas" site
02. create a new cluster
03. go up to 'Databse Deployment' page
04. open project folder and create 2 folders
    client
    server
05. change terminal to server folder
    cd server
06. s: make node project inside server folder
    open terminal in server folder and type 'npm init -y'
07. s: install ...
npm install express mongoose nodemon cors
08.s create 'index.js' inide server folder
09.s in idex.js file

const express = require("express");
const app = express();

app.listen(3001, () => {
  console.log("Server runs in 3001");
});


10.s open package.json file inside server folder

  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "start": "nodemon index.js"----------------------------<<<<<<<<----------------
  },

11.s open terminal in server folder and run app
    npm start

12. open "Databse Deployment" in MongoDB
13. click on "Conncect" btn
14. select "Conncect to mongodb console"
15. copy the link as follow
mongodb+srv://darshana:<password>@cluster0.b4ir7g9.mongodb.net/test
replace the password [darshana]
16. open MONGODB CONSLOE application
17. paste the link in the application
18. click on "Connect" button
19. go to mongodb application and press "connect" button
20. select "Connect your application" option
21. copy the link in it
22. open 'index.js' and write bellow codes


const express = require("express");
const { default: mongoose } = require("mongoose");
const app = express();----------------------<<<<<<<<<------------------

mongoose.connect("mongodb+srv://darshana:<password>@cluster0.b4ir7g9.mongodb.net/?retryWrites=true&w=majority");----------------------<<<<<<<<<------------------

app.listen(3001, () => {
  console.log("Server runs in 3001");
});


23. replace with the password
24. open MONGODB COMPUS
25. click on "Create Database" button [as merntutorials]
26.s modify the index.jsas follow

old code:::
mongoose.connect("mongodb+srv://darshana:<password>@cluster0.b4ir7g9.mongodb.net/?retryWrites=true&w=majority");----------------------<<<<<<<<<------------------
new code:::
mongoose.connect("mongodb+srv://darshana:<password>@cluster0.b4ir7g9.mongodb.net/merntutorial?retryWrites=true&w=majority");----------------------<<<<<<<<<------------------

"....mongodb.net/?..."  >>>> "....mongodb.net/pasteDatabaseName?..."

27.s create a folder 'models' in side server folder
28. create 'Users.js' inside models folder
29.open MongoDB COMPUS
30 create a collection inside the 'merntutorial' as 'users'
30. add data to 'users' collection
30. open 'users' collection and press 'add data' button and select 'Insert Document' option
30. type in there

{
  "_id": {
    "$oid": "62cecfb7b3729eaf0d53a72b"
    name:"darshana".
    age:20,
    username:"dsp"
  }
}
31. set the 'get' requers [GET >> http://localhost:3001/getUsers]

index.js

const express = require("express");
const { default: mongoose } = require("mongoose");
const UserModel = require("./models/Users");
const app = express();

mongoose.connect(
  "mongodb+srv://darshana:darshana@cluster0.b4ir7g9.mongodb.net/merntutorial?retryWrites=true&w=majority"
);

//----------------------------------------------------------
app.get("/getUsers", (req, res) => {
  UserModel.find({}, (err, result) => {
    if (err) {
      res.json(err);
    } else {
      res.json(result);
    }
  });
});
//----------------------------------------------------------

app.listen(3001, () => {
  console.log("Server runs in 3001");
});

33. open POSTMAN and check  GET >> http://localhost:3001/getUsers

34. create post-> /createUser

const express = require("express");
const { default: mongoose } = require("mongoose");
const UserModel = require("./models/Users");
const app = express();

mongoose.connect(
  "mongodb+srv://darshana:darshana@cluster0.b4ir7g9.mongodb.net/merntutorial?retryWrites=true&w=majority"
);

app.get("/getUsers", (req, res) => {
  UserModel.find({}, (err, result) => {
    if (err) {
      res.json(err);
    } else {
      res.json(result);
    }
  });
});


//----------------------------------------------------------
app.post("/createUser", async (req, res) => {
  const user = req.body;
  const newUser = new UserModel(user);
  await newUser.save();

  res.json(user);
});
//----------------------------------------------------------


app.listen(3001, () => {
  console.log("Server runs in 3001");
});

36. modify 'index.js' {to get jsons from body}

const app = express();

app.use(express.json()); --------------<<<------


35.open POSTMAN and check  POST >> http://localhost:3001/createUser
go to Body - Json tab in POSTMAN
type bellow

{
    "name":"ab",
    "age":20,
    "username":"as"
}

37. import cors to index.js

const app = express();
const cors = require("cors"); -------------<<<<<<<

app.use(express.json());
app.use(cors()); -------------<<<<<<<

38. open client folder 
39. create react project in it
  npx create-react-app .
40. istall axios to react
  npm install axios
41. create Design/Design.js to store the design
42. link Design.js to App.js
43. in Design.js  - test with mock data

import React from "react";

export default function Design() {
  const [list, setList] = React.useState([
    { id: 1, name: "dsp", age: 12, username: "pspp" },
  ]);
  return (
    <div>
      {list.map((user) => {
        return <div>
            <h1>Name :{user.name}</h1>
            <h1>Age :{user.age}</h1>
            <h1>UserName :{user.username}</h1>
        </div>;
      })}
    </div>
  );
}

44. set get All users

Design.js

import React from "react";

import Axios from "axios";

export default function Design() {
  const [list, setList] = React.useState([]);
  React.useEffect(() => {
    Axios.get("http://localhost:3001/getUsers").then((responce) => {
      setList(responce.data);
    });
  }, []);
  return (
    <div>
      {list.map((user) => {
        return (
          <div>
            <h1>Name :{user.name}</h1>
            <h1>Age :{user.age}</h1>
            <h1>UserName :{user.username}</h1>
          </div>
        );
      })}
    </div>
  );
}

45. add user

import React from "react";

import Axios from "axios";

export default function Design() {
  const [list, setList] = React.useState([]);
  const [name, setName] = React.useState("");
  const [age, setAge] = React.useState(0);
  const [username, setUsername] = React.useState("");
  React.useEffect(() => {
    Axios.get("http://localhost:3001/getUsers").then((responce) => {
      setList(responce.data);
    });
  }, []);
  const createUser = () => {
    Axios.post("http://localhost:3001/createUser", {
      name: name,
      age: age,
      username: username,
    }).then((responce) => {
      alert("user Created");
    });
  };
  return (
    <div>
      {list.map((user) => {
        return (
          <div>
            <h1>Name :{user.name}</h1>
            <h1>Age :{user.age}</h1>
            <h1>UserName :{user.username}</h1>
          </div>
        );
      })}
      <div>
        <input
          type="text"
          placeholder="name"
          onChange={(e) => setName(e.target.value)}
        />
        <input
          type="text"
          placeholder="age"
          onChange={(e) => setAge(e.target.value)}
        />
        <input
          type="text"
          placeholder="username"
          onChange={(e) => setUsername(e.target.value)}
        />
        <button onClick={createUser}>Create user</button>
      </div>
    </div>
  );
}


